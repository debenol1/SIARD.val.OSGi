Jacksum 1.7.0, July 30, 2006
- added a customizable CRC algorithm, now you can calculate any CRC which
  can be described by the Rocksoft Model CRC Algorithm (8 to 64 bit width),
  see also sf# 1518023 Setting of an initial value for a CRC
- support for combinable checksums, see also sf# 1210489
  (multiple hashes at the same time), thanks to synonymous2 for this feature request
- support for using all algorithms at once (-a all)
- two new algorithms are supported: crc32_bzip2, HAS-160
- support for Tiger Tree hashes (aka Merkle Hashes). Thanks to Carsten Krüger,
  Germany for the feature request and pointers to some resources
- support for new encodings (bin, dec, oct)
- support for the combination of both options -c and -w,
  Thanks to Dipl.-Inf. (FH) Ralf Kahrl, Germany for the implementation of this feature
- a small performance improvement for the whirlpool algorithms
- replaced the crc24 with a faster one by using the customizable CRC algorithm
  (the old one had also a minor bug in the parameterless constructor)
- bug fixed: -V summary does not always return reasonable values
- bug fixed: update(byte[], int, int) fails if offset is > 0 (sf # 1525183)
  This can cause problems if Jacksum is incorporated in different projects
- The bouncycastle and gnu classes have been moved to jonelo.jacksum.adapt so that
  they won't clash with different downloaded versions of the classes. Actually this
  is to avoid potential problems if a project uses both bouncycastle and Jacksum for example.
  Thanks to Alberto Rodriguez, Spain for the feature request
- documentation updated (BeOS' data integrity programs, Tru64 and year of the invention for
  many algorithms)
- tested with gij 4.0.2, JRE 1.3.1_18, 1.4.2_12, 5.0_07, 6.0-rc-b93

Jacksum 1.6.1, Nov 13, 2005
- regression bug fixed: -r does not work anymore on Linux/Unix
  Thanks to Christoph R., Germany and niku.u for the bug reports (sf# 1354426)
- bug fixed: stdout and stderr overwrite each other when stdout and stderr are equal
- bug fixed: -c and -V summary give meaningless summary
- exit status depends on the result of -c now
  Thanks to Martin Z., Germany for the feature request
- improved documentation ("exit status" and "see also" have been added)

Jacksum 1.6.0, Sep 3, 2005
- twelve new algorithms are supported: CRC-8, CRC-24, GOST R 34.11-94, SHA-0, SHA-224,
  Tiger-128, Tiger-160, Tiger2, Whirlpool-0, Whirlpool-2, RIPEMD-256, RIPEMD-320
- change: "whirlpool" refers to Whirlpool-2 now, rather than to Whirlpool-1  
- support for an alternate Adler 32 implementation
- improved option -c: Jacksum can check the integrity even if a file list has
  not been created by Jacksum (or a file list without meta information)
  Thanks to Sebastian J., Germany for this feature request
- new option -w for setting the working directory
- new algorithm-code called "none" for ignoring the real content of
  the files for being able to check just against the filesize
- new algorithm-code called "read" for being able to read the file's content,
  but without doing any calculation
- new option -E for an encoding of the checksum (hex, hexup, Base 16, Base 32,
  Base 64 and BubbleBabble are supported)
- new option -g (group some bytes) for better readability of a hex checksum
- new option -G (group separator) for better readability of a hex checksum
- new option -o for redirecting the output to a file rather than the standard output,
  in this case the file is also excluded from the calculation process
- new option -O for overwriting an existing file
- new option -I for ignoring lines when checking the integrity by -c
- new option -V for a verbose output (number of processed files and dirs, processed bytes,
  number of read errors and elapsed time)
- improved option -e: works also for multiple files and directories 
  for being able to find duplicates
- improved option -e: when using -e, the option -x is not necessary anymore,
  if the return value by default is hex anyway 
- improved option -m: unnecessary defaults are not be written to the header anymore
- improved option -h: can show only fractions of the help file rather than
  the complete help file
- improved option -t: #SEPARATOR and #QUOTE are also replaced
  Thanks to Claudio C., Italy for the feature request
- improved option -F: #FILENAME{NAME} and #FILENAME{PATH} can be used
  Thanks to Claudio C., Italy for the feature request
- bug fixed: if calling the getHexValue() method more than once, the hash based
  algorithms return a different value; this can cause problems if Jacksum 
  is used in other projects, Thanks to Bob C. for the bug report
- bug fixed: problem on Unix/Linux while checking a file list if the filename's
  last character is a colon (e. g. "Terminal 1:")
- improved documentation, added also collision files
- improved the public API (support a method to return byte[])
  Thanks to Alex G., Germany for this feature request
- improved the public API for other projects (methods getAvailableAlgorithms(),
  and equals() have been added)
- Added javadoc, Thanks to Corey Osman for this feature request
- refactored and code improvements
- tested with gij 3.2.2, Kaffe 1.1.4, JRE 1.3.1_16, 1.4.2_09, 5.0_04, 6.0-ea-b48

Jacksum 1.5.1, 2004-11-06
- regression bug fixed: when option -l is used, removed files will not be
  printed out to the standard output anymore
  Thanks to Sabrina Rolleman, Canada for the bugreport
- sourceforge feature request #1028824 has been implemented
  (add homepage URI if -m is used)
  Thanks to Lee A. Davis for the feature request
- improved documentation

Jacksum 1.5.0, 2004-08-08
- four new algorithms are supported: ed2k/eDonkey/eMule, CRC-64, ELF-32, FCS-16
  Thanks to Henrique Malheiro, Portugal for the eDonkey reference implementation
- sourceforge bug #948070 has been fixed (-c won't work if -t has been set)
  Thanks to Lee A. Davis for the bugreport
- bug fixed: Jacksum hangs if it reaches a fifo under Unix/Linux
- bug fixed: files which are used by another process can't be processed properly
- new option -d for ignoring symbolic links to directories under Unix/Linux to avoid
  enless loops in particular cases
- improved option -q to support not only hex, but also text and decimal formats
- new option -F for being able to customize the output format
  see also sourceforge feature request #968469 (show file length on MD5)
- new option -P to print out filenames with a customized separator
- lists created with -m are platform independent now, you can verify files against
  a list on Linux/Unix if the list has been created on Windows for example
- new option -S to calculate just one fingerprint (summary)
  Thanks to Berthold Kohlmann, Germany for this feature request
- sourceforege feature request #968491 has been implemented 
  (Handle pre 1.5 time formats with -c), thanks to Lee A. Davis for the request
- sourceforge feature request #968487 has been implemented (list dir argument as comment)
  Thanks to Lee A. Davis for the feature request
- new option -A to specify alternate implementations of one of the following algorithms
  crc32, md5, sha-1, sha-256, sha-384, sha-512
- added alias called FCS-32 for CRC-32
- added alias called SHA-160 for SHA-1
- Java version check also for IBM's Java VM
- tested successfully with JRE 1.5 beta3

Jacksum 1.4.0, 2004-02-01
- three new algorithms are supported: Tiger, Haval and 
  the MPEG spec of CRC-32
  Thanks to Chris Ash, Southampton, UK for suggesting this feature based
  on existing GPL code (VideoLan project)
- Haval can have both length (128, 160, 192, 224 or 256 bits) 
  and round parameters (3 to 5)
- algorithms sha-256, sha-384 and sha-512 are also supported with JRE 1.3 now
- new option -p for including path info on each line when recursively
  file processing is requested, this makes it easier to sort or grep
  ouput lines
  Thanks to Douglas E. W. for both feature request and reference implementation
- new option -e for comparison against an expected checksum
  Thanks to Daniel Ellermann, Germany for both feature request and
  reference implementation
- new option -l to show a list of modified or deleted files, list can be used
  to feed the zip command
- exits, if parameter -t does not contain supported characters
- version check introduced for better compatibility
- improved comments for sourcecode called Crc16.java
- documentation updated with Mac OS X information
- requires at least JRE 1.3.1, 1.4.2 is recommended

Jacksum 1.3.0, 2003-11-02
- eight new algorithms are supported: sha-256, sha-384 and sha-512 
  (requires Java 1.4.2 or later), xor8, sum8, sum16, sum24 and sum32
- option to check files against a given list (option -c)
  Thanks to Leonardo A. Pires, Brazil for this feature request
  Thanks a lot to Christian F., London, UK for his reference implementation
- option to create meta-information (option -m); while checking against
  a list, you don't have to enter the original command line options again
- timestamps of files can be part of the output (option -t)
  Thanks to Vishwanathan Narayanan, Florida, USA for this feature request
  with the option -c you can check against both content and timestamps
- the output format of timestamps is highly configurable
- process a hex sequence quickly (option -q)
  Thanks to Jack Memishian, USA for this feature request
- bug fixed: algorithm cksum hangs, if a file is greater than 2 GB
- bug fixed: processing special file system folders, like Windows' 
  "System Volume Information" throws to a NullPointerException
- stdout and stderr are separete streams now
- Jacksum is using the GNU crypto package 1.1
  (http://www.gnu.org/software/gnu-crypto/)
- documentation updated

Jacksum 1.2.0, 2003-02-16
- four new algorithms from the GNU crypto project are supported: 
  MD4, RIPEMD-128, RIPEMD-160 and Whirlpool
  (http://www.gnu.org/software/classpathx/crypto/)
- bug fixed: calling the getValue() method more than once for the Cksum 
  class returns a different value; this can cause problems if Jacksum 
  will be used in other projects.
  Thanks to Cary Coulter for both, bug report and fix.
- bug fixed: CRC16 does not work like the standard CRC16
  generator poly X^16 + X^15 + X^2 + 1.
  Thanks to David Elfi, Argentina for both bug report and fix
- provided compatibility with free Kaffe Java VM
  (Java version check only for Sun's Java VM)
- option -v to get the version of Jacksum

Jacksum 1.1.2, 2003-01-19
- bug fixed: input file will not be closed; this can cause 
  problems if Jacksum will be used in other projects.
  Thanks to Bill Kelemen for both, bug report and fix.
- faster algorithm for output of checksums in hex format
- documentation updated (Solaris 9+ can have a md5 application)

Jacksum 1.1.1, 2002-11-07
- bug fixed: algorithm sysv returns invalid checksum if files are greater 
  than ~9 MB. Thanks to Sunny Liu, NYC for both bug report and fix.

Jacksum 1.1.0, 2002-09-08
- options for hexadecimal checksum output (lower- and uppercase)
  Thanks to Peter Frey, Germany for this feature request
- filenames/directories will be sorted alphabetically

Jacksum 1.0.0, 2002-07-07
- initial public release 
- requires at least JRE 1.3.0
- algorithms Adler32, BSD sum, POSIX cksum, CRC-16, CRC-32, MD2, MD5, 
  SHA1 and Unix System V sum are supported
- processing of subdirectories is supported
- a custom separator string can be defined
